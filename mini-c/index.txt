typedef void (*)(Event) EventCallback;
typedef int CInt;

Element $(string selector) => document.querySelector(selector);

$.delegate = [](string selector, string event, string targetSelector, EventCallback callback) -> void {
  $(selector).addEventListener(event, [](Event e) -> void {
    if (!e.target.contains(targetSelector)) {
      callback(e);
    }
  });
};

$.on = [&](string selector, string event, EventCallback callback) -> void {
  $(selector).addEventListener(event, callback);
};

int main(void) {
  const int[] numbers = [1, 2, 3, 4, 5];

  int? optionalNumber = null;

  const string message = "test" || " message";

  const object person = {
    name = "John",
    age = 30,
    isStudent = false
  };

  const string pet = person?.pet ?? "No pet";

  for (int i = 0; i < numbers.length; i++) {
    console.log(numbers[i]);
  }

  for (const int number : numbers) {
    console.log(number);
  }

  $("#myButton").on("click", [&](Event e) -> void {
    e.preventDefault();
    console.log("Button clicked!");
  });

  $("#myList").delegate("click", "li", [](Event e) -> void {
    console.log("List item clicked: " + e.target.textContent);
  });
}
